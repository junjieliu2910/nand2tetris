function Apple.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push pointer 0
return
function Apple.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Apple.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 2
add
push constant 1
add
push this 1
push this 2
add
push constant 1
add
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Apple.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 2
add
push this 1
push this 2
add
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Apple.isCollision 1
push argument 0
pop pointer 0
push constant 2
push this 2
call Math.multiply 2
pop local 0
push this 0
push local 0
add
push argument 1
push constant 1
add
lt
push this 0
push constant 1
add
push argument 1
push local 0
add
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 1
push local 0
add
push argument 2
push constant 1
add
lt
push this 1
push constant 1
add
push argument 2
push local 0
add
gt
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push constant 0
not
return
function Apple.getX 0
push argument 0
pop pointer 0
push this 0
return
function Apple.getY 0
push argument 0
pop pointer 0
push this 1
return
